services:
  db:
    image: postgres:17
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres'"]
      interval: 3s
      timeout: 1s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: always
    networks:
      - ft_transcendence

  frontend:
    image: frontend:0.0.1
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - ft_transcendence

  backend:
    image: backend:0.0.1
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: always
    volumes:
      - profile_images_data:/app/media
    networks:
      - ft_transcendence

  load_balancer:
    image: load_balancer:0.0.1
    build:
      context: .
      dockerfile: Dockerfile
    container_name: load_balancer
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
      - backend
    restart: always
    networks:
      - ft_transcendence

volumes:
  db_data:
  profile_images_data:

networks:
  ft_transcendence:
